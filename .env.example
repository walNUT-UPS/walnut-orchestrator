# walNUT Backend - .env example

# Required secrets
WALNUT_DB_KEY=change_me_to_a_32+_char_secret_key
WALNUT_JWT_SECRET=change_me_to_a_32+_char_jwt_secret

# Optional development override for DB key (not for production)
# WALNUT_DB_KEY_DEV=dev_only_insecure_key_at_least_32_chars

# NUT (Network UPS Tools) server config
WALNUT_NUT_HOST=localhost
WALNUT_NUT_PORT=3493
# WALNUT_NUT_USERNAME=
# WALNUT_NUT_PASSWORD=

# Backend behavior
WALNUT_POLL_INTERVAL=5
WALNUT_HEARTBEAT_TIMEOUT=30
WALNUT_DATA_RETENTION_HOURS=24

# Auth & cookies
# For local dev, you can set SECURE_COOKIES=false if not using HTTPS
WALNUT_SECURE_COOKIES=false
WALNUT_SIGNUP_ENABLED=false
# JSON list of allowed origins (CORS). Example for local dev frontend:
WALNUT_ALLOWED_ORIGINS=["http://localhost:5173","http://127.0.0.1:5173"]

# Feature flags
WALNUT_POLICY_V1_ENABLED=true

# OIDC (optional)
WALNUT_OIDC_ENABLED=false
# WALNUT_OIDC_PROVIDER_NAME=google
# WALNUT_OIDC_CLIENT_ID=
# WALNUT_OIDC_CLIENT_SECRET=
# WALNUT_OIDC_DISCOVERY_URL=
# WALNUT_OIDC_ADMIN_ROLES=["admin"]
# WALNUT_OIDC_VIEWER_ROLES=["viewer"]

# Internal tuning
# WALNUT_DB_PATH=data/walnut.db
# WALNUT_TESTING_MODE=false

# --- Docker-specific knobs (compose + images) ---
# Include optional protocol clients at build time: pysnmp, pymodbus, ncclient, pygnmi
# INSTALL_EXTRAS=transports

# Gunicorn (prod image)
# WORKERS=2
# TIMEOUT=45
# KEEPALIVE=5

