"""Add users table for authentication

Revision ID: aae5cef19ddd
Revises: 0001
Create Date: 2025-08-08 09:54:37.961971

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import fastapi_users_db_sqlalchemy


# revision identifiers, used by Alembic.
revision: str = 'aae5cef19ddd'
down_revision: Union[str, None] = '0001'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('role', sa.Enum('ADMIN', 'VIEWER', name='role'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)

    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.alter_column('timestamp',
               existing_type=sa.DATETIME(),
               server_default=sa.text('(CURRENT_TIMESTAMP)'),
               existing_nullable=False)
        batch_op.create_index(batch_op.f('ix_events_event_type'), ['event_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_events_severity'), ['severity'], unique=False)
        batch_op.create_index(batch_op.f('ix_events_timestamp'), ['timestamp'], unique=False)

    with op.batch_alter_table('hosts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_hosts_hostname'), ['hostname'], unique=False)
        batch_op.create_index(batch_op.f('ix_hosts_ip_address'), ['ip_address'], unique=False)
        batch_op.create_index(batch_op.f('ix_hosts_os_type'), ['os_type'], unique=False)

    with op.batch_alter_table('integrations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_integrations_enabled'), ['enabled'], unique=False)
        batch_op.create_index(batch_op.f('ix_integrations_type'), ['type'], unique=False)

    with op.batch_alter_table('policies', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_policies_enabled'), ['enabled'], unique=False)
        batch_op.create_index(batch_op.f('ix_policies_priority'), ['priority'], unique=False)

    with op.batch_alter_table('secrets', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               server_default=sa.text('(CURRENT_TIMESTAMP)'),
               existing_nullable=False)

    with op.batch_alter_table('ups_samples', schema=None) as batch_op:
        batch_op.alter_column('timestamp',
               existing_type=sa.DATETIME(),
               server_default=sa.text('(CURRENT_TIMESTAMP)'),
               existing_nullable=False)
        batch_op.create_index(batch_op.f('ix_ups_samples_timestamp'), ['timestamp'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('ups_samples', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_ups_samples_timestamp'))
        batch_op.alter_column('timestamp',
               existing_type=sa.DATETIME(),
               server_default=sa.text("(datetime('now'))"),
               existing_nullable=False)

    with op.batch_alter_table('secrets', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               server_default=sa.text("(datetime('now'))"),
               existing_nullable=False)

    with op.batch_alter_table('policies', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_policies_priority'))
        batch_op.drop_index(batch_op.f('ix_policies_enabled'))

    with op.batch_alter_table('integrations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_integrations_type'))
        batch_op.drop_index(batch_op.f('ix_integrations_enabled'))

    with op.batch_alter_table('hosts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_hosts_os_type'))
        batch_op.drop_index(batch_op.f('ix_hosts_ip_address'))
        batch_op.drop_index(batch_op.f('ix_hosts_hostname'))

    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_events_timestamp'))
        batch_op.drop_index(batch_op.f('ix_events_severity'))
        batch_op.drop_index(batch_op.f('ix_events_event_type'))
        batch_op.alter_column('timestamp',
               existing_type=sa.DATETIME(),
               server_default=sa.text("(datetime('now'))"),
               existing_nullable=False)

    op.create_table('encryption_test',
    sa.Column('id', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    # ### end Alembic commands ###